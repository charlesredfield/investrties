{"ast":null,"code":"var _jsxFileName = \"/root/investrties/src/components/navBar.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport React, { useState, useEffect } from 'react';\nimport './media-queries.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Navbar() {\n  _s();\n  useEffect(() => {\n    let prevScrollPos = window.scrollY;\n    const handleScroll = () => {\n      const currentScrollPos = window.scrollY;\n      const navbar = document.querySelector('.navbar');\n      if (prevScrollPos > currentScrollPos || currentScrollPos < 50) {\n        navbar.style.top = '0';\n      } else {\n        navbar.style.top = '-50px';\n      }\n      prevScrollPos = currentScrollPos;\n    };\n    window.addEventListener('scroll', handleScroll);\n\n    // Clean up the event listener on unmount\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  const [navbarVisible, setNavbarVisible] = useState(true);\n  const [navbarClass, setNavbarClass] = useState('black-bg');\n  const [prevScrollY, setPrevScrollY] = useState(0);\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY;\n      if (currentScrollY < prevScrollY) {\n        setNavbarVisible(true);\n        setNavbarClass('black-bg');\n      } else {\n        setNavbarVisible(false);\n        setNavbarClass('transparent');\n      }\n      setPrevScrollY(currentScrollY);\n    };\n    window.addEventListener('scroll', handleScroll);\n\n    // Clean up the event listener on unmount\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [prevScrollY]);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: `navbar ${navbarClass} ${navbarVisible ? 'visible' : 'slide-up'}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Navbar, \"VuPhXT34UA2g4qA4uv08DIowOKw=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["logo","React","useState","useEffect","jsxDEV","_jsxDEV","Navbar","_s","prevScrollPos","window","scrollY","handleScroll","currentScrollPos","navbar","document","querySelector","style","top","addEventListener","removeEventListener","navbarVisible","setNavbarVisible","navbarClass","setNavbarClass","prevScrollY","setPrevScrollY","currentScrollY","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/root/investrties/src/components/navBar.js"],"sourcesContent":["import logo from './logo.svg';\nimport React, { useState, useEffect } from 'react';\nimport './media-queries.css';\nfunction Navbar() {\n  useEffect(() => {\n    let prevScrollPos = window.scrollY;\n\n    const handleScroll = () => {\n      const currentScrollPos = window.scrollY;\n      const navbar = document.querySelector('.navbar');\n\n      if (prevScrollPos > currentScrollPos || currentScrollPos < 50) {\n        navbar.style.top = '0';\n      } else {\n        navbar.style.top = '-50px';\n      }\n\n      prevScrollPos = currentScrollPos;\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    // Clean up the event listener on unmount\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const [navbarVisible, setNavbarVisible] = useState(true);\n  const [navbarClass, setNavbarClass] = useState('black-bg');\n  const [prevScrollY, setPrevScrollY] = useState(0);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY;\n      \n      if (currentScrollY < prevScrollY) {\n        setNavbarVisible(true);\n        setNavbarClass('black-bg');\n      } else {\n        setNavbarVisible(false);\n        setNavbarClass('transparent');\n      }\n\n      setPrevScrollY(currentScrollY);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    // Clean up the event listener on unmount\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [prevScrollY]);\n\n  return (\n    <nav className={`navbar ${navbarClass} ${navbarVisible ? 'visible' : 'slide-up'}`}>\n      {/* Navbar content */}\n    </nav>\n  );\n}\n\nexport default Navbar;"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC7B,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChBJ,SAAS,CAAC,MAAM;IACd,IAAIK,aAAa,GAAGC,MAAM,CAACC,OAAO;IAElC,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzB,MAAMC,gBAAgB,GAAGH,MAAM,CAACC,OAAO;MACvC,MAAMG,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,SAAS,CAAC;MAEhD,IAAIP,aAAa,GAAGI,gBAAgB,IAAIA,gBAAgB,GAAG,EAAE,EAAE;QAC7DC,MAAM,CAACG,KAAK,CAACC,GAAG,GAAG,GAAG;MACxB,CAAC,MAAM;QACLJ,MAAM,CAACG,KAAK,CAACC,GAAG,GAAG,OAAO;MAC5B;MAEAT,aAAa,GAAGI,gBAAgB;IAClC,CAAC;IAEDH,MAAM,CAACS,gBAAgB,CAAC,QAAQ,EAAEP,YAAY,CAAC;;IAE/C;IACA,OAAO,MAAM;MACXF,MAAM,CAACU,mBAAmB,CAAC,QAAQ,EAAER,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,UAAU,CAAC;EAC1D,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,MAAMQ,YAAY,GAAGA,CAAA,KAAM;MACzB,MAAMe,cAAc,GAAGjB,MAAM,CAACC,OAAO;MAErC,IAAIgB,cAAc,GAAGF,WAAW,EAAE;QAChCH,gBAAgB,CAAC,IAAI,CAAC;QACtBE,cAAc,CAAC,UAAU,CAAC;MAC5B,CAAC,MAAM;QACLF,gBAAgB,CAAC,KAAK,CAAC;QACvBE,cAAc,CAAC,aAAa,CAAC;MAC/B;MAEAE,cAAc,CAACC,cAAc,CAAC;IAChC,CAAC;IAEDjB,MAAM,CAACS,gBAAgB,CAAC,QAAQ,EAAEP,YAAY,CAAC;;IAE/C;IACA,OAAO,MAAM;MACXF,MAAM,CAACU,mBAAmB,CAAC,QAAQ,EAAER,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,CAACa,WAAW,CAAC,CAAC;EAEjB,oBACEnB,OAAA;IAAKsB,SAAS,EAAG,UAASL,WAAY,IAAGF,aAAa,GAAG,SAAS,GAAG,UAAW;EAAE;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE7E,CAAC;AAEV;AAACxB,EAAA,CAzDQD,MAAM;AAAA0B,EAAA,GAAN1B,MAAM;AA2Df,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}