{"ast":null,"code":"import _slicedToArray from\"/root/investrties/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import logo from'./logo.svg';import React,{useState,useEffect}from'react';import'./media-queries.css';import{jsx as _jsx}from\"react/jsx-runtime\";function Navbar(){var _useState=useState('black-bg visible'),_useState2=_slicedToArray(_useState,2),navbarClass=_useState2[0],setNavbarClass=_useState2[1];// Start with visible class\nvar _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),prevScrollY=_useState4[0],setPrevScrollY=_useState4[1];useEffect(function(){var handleScroll=function handleScroll(){var currentScrollY=window.scrollY;if(currentScrollY<prevScrollY){setNavbarClass('black-bg visible');// Toggle the visible class when scrolling up\n}else{setNavbarClass('transparent slide-up');// Apply the slide-up class for sliding up animation\n}setPrevScrollY(currentScrollY);};window.addEventListener('scroll',handleScroll);// Clean up the event listener on unmount\nreturn function(){window.removeEventListener('scroll',handleScroll);};},[prevScrollY]);return/*#__PURE__*/_jsx(\"nav\",{className:\"navbar \".concat(navbarClass)});}export default Navbar;","map":{"version":3,"names":["logo","React","useState","useEffect","jsx","_jsx","Navbar","_useState","_useState2","_slicedToArray","navbarClass","setNavbarClass","_useState3","_useState4","prevScrollY","setPrevScrollY","handleScroll","currentScrollY","window","scrollY","addEventListener","removeEventListener","className","concat"],"sources":["/root/investrties/src/components/navBar.js"],"sourcesContent":["import logo from './logo.svg';\nimport React, { useState, useEffect } from 'react';\nimport './media-queries.css';\nfunction Navbar() {\n  const [navbarClass, setNavbarClass] = useState('black-bg visible'); // Start with visible class\n  const [prevScrollY, setPrevScrollY] = useState(0);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY;\n\n      if (currentScrollY < prevScrollY) {\n        setNavbarClass('black-bg visible'); // Toggle the visible class when scrolling up\n      } else {\n        setNavbarClass('transparent slide-up'); // Apply the slide-up class for sliding up animation\n      }\n\n      setPrevScrollY(currentScrollY);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    // Clean up the event listener on unmount\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [prevScrollY]);\n\n  return (\n    <nav className={`navbar ${navbarClass}`}>\n      {/* Navbar content */}\n    </nav>\n  );\n}\n\nexport default Navbar;"],"mappings":"uGAAA,MAAO,CAAAA,IAAI,KAAM,YAAY,CAC7B,MAAO,CAAAC,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAC7B,QAAS,CAAAC,MAAMA,CAAA,CAAG,CAChB,IAAAC,SAAA,CAAsCL,QAAQ,CAAC,kBAAkB,CAAC,CAAAM,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA3DG,WAAW,CAAAF,UAAA,IAAEG,cAAc,CAAAH,UAAA,IAAkC;AACpE,IAAAI,UAAA,CAAsCV,QAAQ,CAAC,CAAC,CAAC,CAAAW,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA1CE,WAAW,CAAAD,UAAA,IAAEE,cAAc,CAAAF,UAAA,IAElCV,SAAS,CAAC,UAAM,CACd,GAAM,CAAAa,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAA,CAAS,CACzB,GAAM,CAAAC,cAAc,CAAGC,MAAM,CAACC,OAAO,CAErC,GAAIF,cAAc,CAAGH,WAAW,CAAE,CAChCH,cAAc,CAAC,kBAAkB,CAAC,CAAE;AACtC,CAAC,IAAM,CACLA,cAAc,CAAC,sBAAsB,CAAC,CAAE;AAC1C,CAEAI,cAAc,CAACE,cAAc,CAAC,CAChC,CAAC,CAEDC,MAAM,CAACE,gBAAgB,CAAC,QAAQ,CAAEJ,YAAY,CAAC,CAE/C;AACA,MAAO,WAAM,CACXE,MAAM,CAACG,mBAAmB,CAAC,QAAQ,CAAEL,YAAY,CAAC,CACpD,CAAC,CACH,CAAC,CAAE,CAACF,WAAW,CAAC,CAAC,CAEjB,mBACET,IAAA,QAAKiB,SAAS,WAAAC,MAAA,CAAYb,WAAW,CAAG,CAEnC,CAAC,CAEV,CAEA,cAAe,CAAAJ,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}