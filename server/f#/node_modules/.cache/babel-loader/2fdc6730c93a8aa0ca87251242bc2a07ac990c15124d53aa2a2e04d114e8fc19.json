{"ast":null,"code":"var _jsxFileName = \"/root/investrties/src/components/navBar.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Navbar() {\n  _s();\n  const [navbarColor, setNavbarColor] = useState('transparent');\n  useEffect(() => {\n    const changeNavbarColor = () => {\n      if (window.scrollY >= 50) {\n        setNavbarColor('black'); // Change the color based on your preference\n      } else {\n        setNavbarColor('transparent');\n      }\n    };\n    window.addEventListener('scroll', changeNavbarColor);\n\n    // Clean up the event listener on unmount\n    return () => {\n      window.removeEventListener('scroll', changeNavbarColor);\n    };\n  }, []);\n  const navbarStyles = {\n    backgroundColor: navbarColor,\n    height: '13vh',\n    position: 'sticky',\n    top: 0,\n    // Media query for screens up to 768px (typical mobile width)\n    '@media (max-width: 768px)': {\n      height: '10vh' // Adjust the height for mobile\n      // Other mobile-specific styles\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    style: {\n      navbarStyles\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}\n_s(Navbar, \"PMqKvxeTxAkK/FAsdE/cKRGpizc=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["logo","React","useState","useEffect","jsxDEV","_jsxDEV","Navbar","_s","navbarColor","setNavbarColor","changeNavbarColor","window","scrollY","addEventListener","removeEventListener","navbarStyles","backgroundColor","height","position","top","className","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/root/investrties/src/components/navBar.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\n\nfunction Navbar() {\n    const [navbarColor, setNavbarColor] = useState('transparent');\n\n    useEffect(() => {\n      const changeNavbarColor = () => {\n        if (window.scrollY >= 50) {\n          setNavbarColor('black'); // Change the color based on your preference\n        } else {\n          setNavbarColor('transparent');\n        }\n      };\n  \n      window.addEventListener('scroll', changeNavbarColor);\n  \n      // Clean up the event listener on unmount\n      return () => {\n        window.removeEventListener('scroll', changeNavbarColor);\n      };\n    }, []);\n    const navbarStyles = {\n        backgroundColor: navbarColor,\n        height: '13vh',\n        position: 'sticky',\n        top: 0,\n        // Media query for screens up to 768px (typical mobile width)\n        '@media (max-width: 768px)': {\n          height: '10vh', // Adjust the height for mobile\n          // Other mobile-specific styles\n        }\n      };\n    return (\n      <nav className=\"navbar\" style={{ navbarStyles }}>\n        {/* Navbar content */}\n      </nav>\n    );\n  }\n  \n  export default Navbar;"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,aAAa,CAAC;EAE7DC,SAAS,CAAC,MAAM;IACd,MAAMO,iBAAiB,GAAGA,CAAA,KAAM;MAC9B,IAAIC,MAAM,CAACC,OAAO,IAAI,EAAE,EAAE;QACxBH,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;MAC3B,CAAC,MAAM;QACLA,cAAc,CAAC,aAAa,CAAC;MAC/B;IACF,CAAC;IAEDE,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,iBAAiB,CAAC;;IAEpD;IACA,OAAO,MAAM;MACXC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,iBAAiB,CAAC;IACzD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,MAAMK,YAAY,GAAG;IACjBC,eAAe,EAAER,WAAW;IAC5BS,MAAM,EAAE,MAAM;IACdC,QAAQ,EAAE,QAAQ;IAClBC,GAAG,EAAE,CAAC;IACN;IACA,2BAA2B,EAAE;MAC3BF,MAAM,EAAE,MAAM,CAAE;MAChB;IACF;EACF,CAAC;;EACH,oBACEZ,OAAA;IAAKe,SAAS,EAAC,QAAQ;IAACC,KAAK,EAAE;MAAEN;IAAa;EAAE;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE3C,CAAC;AAEV;AAAClB,EAAA,CAnCMD,MAAM;AAAAoB,EAAA,GAANpB,MAAM;AAqCb,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}