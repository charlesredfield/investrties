{"ast":null,"code":"var _jsxFileName = \"/root/investrties/src/components/navBar.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport React, { useState, useEffect } from 'react';\nimport './media-queries.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Navbar() {\n  _s();\n  const [navbarVisible, setNavbarVisible] = useState(true);\n  const [navbarTransparent, setNavbarTransparent] = useState(true);\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY;\n      if (currentScrollY > 50) {\n        setNavbarTransparent(false);\n      } else {\n        setNavbarTransparent(true);\n      }\n      if (currentScrollY > scrollY) {\n        setNavbarVisible(false);\n      } else {\n        setNavbarVisible(true);\n      }\n      scrollY = currentScrollY;\n    };\n    let scrollY = window.scrollY;\n    window.addEventListener('scroll', handleScroll);\n\n    // Clean up the event listener on unmount\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: `navbar ${navbarVisible ? 'visible' : 'hidden'} ${navbarTransparent ? 'transparent at-top' : 'black-bg'}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Navbar, \"Itsjq1CpqHboDV3r5JQJtC0kSK0=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["logo","React","useState","useEffect","jsxDEV","_jsxDEV","Navbar","_s","navbarVisible","setNavbarVisible","navbarTransparent","setNavbarTransparent","handleScroll","currentScrollY","window","scrollY","addEventListener","removeEventListener","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/root/investrties/src/components/navBar.js"],"sourcesContent":["import logo from './logo.svg';\nimport React, { useState, useEffect } from 'react';\nimport './media-queries.css';\nfunction Navbar() {\n  const [navbarVisible, setNavbarVisible] = useState(true);\n  const [navbarTransparent, setNavbarTransparent] = useState(true);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY;\n\n      if (currentScrollY > 50) {\n        setNavbarTransparent(false);\n      } else {\n        setNavbarTransparent(true);\n      }\n\n      if (currentScrollY > scrollY) {\n        setNavbarVisible(false);\n      } else {\n        setNavbarVisible(true);\n      }\n\n      scrollY = currentScrollY;\n    };\n\n    let scrollY = window.scrollY;\n\n    window.addEventListener('scroll', handleScroll);\n\n    // Clean up the event listener on unmount\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  return (\n    <nav className={`navbar ${navbarVisible ? 'visible' : 'hidden'} ${navbarTransparent ? 'transparent at-top' : 'black-bg'}`}>\n      {/* Navbar content */}\n    </nav>\n  );\n}\n\nexport default Navbar;"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC7B,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACQ,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEhEC,SAAS,CAAC,MAAM;IACd,MAAMS,YAAY,GAAGA,CAAA,KAAM;MACzB,MAAMC,cAAc,GAAGC,MAAM,CAACC,OAAO;MAErC,IAAIF,cAAc,GAAG,EAAE,EAAE;QACvBF,oBAAoB,CAAC,KAAK,CAAC;MAC7B,CAAC,MAAM;QACLA,oBAAoB,CAAC,IAAI,CAAC;MAC5B;MAEA,IAAIE,cAAc,GAAGE,OAAO,EAAE;QAC5BN,gBAAgB,CAAC,KAAK,CAAC;MACzB,CAAC,MAAM;QACLA,gBAAgB,CAAC,IAAI,CAAC;MACxB;MAEAM,OAAO,GAAGF,cAAc;IAC1B,CAAC;IAED,IAAIE,OAAO,GAAGD,MAAM,CAACC,OAAO;IAE5BD,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;;IAE/C;IACA,OAAO,MAAM;MACXE,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEL,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKa,SAAS,EAAG,UAASV,aAAa,GAAG,SAAS,GAAG,QAAS,IAAGE,iBAAiB,GAAG,oBAAoB,GAAG,UAAW;EAAE;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAErH,CAAC;AAEV;AAACf,EAAA,CAtCQD,MAAM;AAAAiB,EAAA,GAANjB,MAAM;AAwCf,eAAeA,MAAM;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}