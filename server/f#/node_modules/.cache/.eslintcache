[{"/root/investrties/src/index.js":"1","/root/investrties/src/App.js":"2","/root/investrties/src/reportWebVitals.js":"3","/root/investrties/src/components/navBar.js":"4","/root/investrties/src/components/logo.js":"5","/root/investrties/src/components/menu.js":"6","/root/investrties/src/pages/Signup.js":"7","/root/investrties/src/pages/Home.js":"8","/root/investrties/src/pages/Donations.js":"9","/root/investrties/src/pages/Features.js":"10","/root/investrties/src/pages/Login.js":"11","/root/investrties/src/pages/Feedback.js":"12","/root/investrties/src/pages/Ourplan.js":"13","/root/investrties/src/pages/Contactus.js":"14","/root/investrties/src/pages/api/axios.js":"15","/root/investrties/src/pages/context/AuthProvider.js":"16","/root/investrties/src/pages/Account.js":"17"},{"size":564,"mtime":1691522287833,"results":"18","hashOfConfig":"19"},{"size":1456,"mtime":1693400641325,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1690989636601,"results":"21","hashOfConfig":"19"},{"size":1815,"mtime":1692805269295,"results":"22","hashOfConfig":"19"},{"size":337,"mtime":1693326033432,"results":"23","hashOfConfig":"19"},{"size":4133,"mtime":1693267521419,"results":"24","hashOfConfig":"19"},{"size":7573,"mtime":1693402311925,"results":"25","hashOfConfig":"19"},{"size":1707,"mtime":1693400087915,"results":"26","hashOfConfig":"19"},{"size":225,"mtime":1693400250415,"results":"27","hashOfConfig":"19"},{"size":222,"mtime":1693400240505,"results":"28","hashOfConfig":"19"},{"size":3924,"mtime":1693428681437,"results":"29","hashOfConfig":"19"},{"size":222,"mtime":1693400232135,"results":"30","hashOfConfig":"19"},{"size":219,"mtime":1693400196855,"results":"31","hashOfConfig":"19"},{"size":224,"mtime":1693400259535,"results":"32","hashOfConfig":"19"},{"size":98,"mtime":1693323889802,"results":"33","hashOfConfig":"19"},{"size":342,"mtime":1693324032742,"results":"34","hashOfConfig":"19"},{"size":3596,"mtime":1693436219807,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"ehw0yl",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},"/root/investrties/src/index.js",[],[],[],"/root/investrties/src/App.js",[],[],"/root/investrties/src/reportWebVitals.js",[],[],"/root/investrties/src/components/navBar.js",[],[],"/root/investrties/src/components/logo.js",["92"],[],"import logo from './logo.svg';\nimport './media-queries.css';\nimport { NavLink } from 'react-router-dom';\n\nfunction Logo() {\n    \n  return (\n<div className=\"logo-container\">\n<NavLink to='/'><img src={logo} className=\"logo\" /></NavLink>\n<NavLink to='/' className=\"logo-text\">InvestrTies</NavLink>\n        </div>\n  );\n}\nexport default Logo;","/root/investrties/src/components/menu.js",["93"],[],"import React, { useState, useEffect } from 'react';\nimport './media-queries.css';\nimport { NavLink } from 'react-router-dom';\nimport logo from './logo.svg';\n\nfunction Menu() {\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const [isDisabled, setIsDisabled] = useState(false);\n    const [navbarClass, setNavbarClass] = useState('black-bg visible');\n  const [prevScrollY, setPrevScrollY] = useState(0);\n  \n  \n  \n\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScrollY = window.scrollY;\n\n      if (currentScrollY < prevScrollY) {\n        setNavbarClass('down');\n      } else {\n        setNavbarClass('up');\n      }\n\n      setPrevScrollY(currentScrollY);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, [prevScrollY]);\n  const toggleMenu = () => {\n    setIsDisabled(true)\n    setIsMenuOpen(!isMenuOpen)\n      setTimeout(() => {\n        setIsDisabled(false)\n        }, 1100);\n    };\n    return (\n        <>\n        <button className={`menu ${navbarClass}`} onClick={toggleMenu} disabled={isDisabled}>Menu</button>\n            <div className={`mobile-menu ${isMenuOpen ? 'open' : 'close'}`}>\n                <div className='mobie-content'>\n            <div className=\"mobile-links\">\n            <NavLink to=\"/login\" onClick={toggleMenu} className={`link ${isMenuOpen ? 'fade-in-link' : 'fade-out-link'}`}>\n              Log in\n            </NavLink>\n            <NavLink to=\"/signup\" onClick={toggleMenu} className={`link ${isMenuOpen ? 'fade-in-link' : 'fade-out-link'}`}>\n              Sign up\n            </NavLink>\n            <NavLink to=\"/features\" className={`link ${isMenuOpen ? 'fade-in-link' : 'fade-out-link'}`}>\n              Features\n            </NavLink>\n            <NavLink to=\"/ourplan\" onClick={toggleMenu} className={`link ${isMenuOpen ? 'fade-in-link' : 'fade-out-link'}`}>\n              Our Plan\n            </NavLink>\n            <NavLink to=\"/feedback\" onClick={toggleMenu} className={`link ${isMenuOpen ? 'fade-in-link' : 'fade-out-link'}`}>\n              Feedback\n            </NavLink>\n            <NavLink to=\"/contact\" onClick={toggleMenu} className={`link ${isMenuOpen ? 'fade-in-link' : 'fade-out-link'}`}>\n              Contact Us\n            </NavLink>\n            <NavLink to=\"/donation\" onClick={toggleMenu} className={`link ${isMenuOpen ? 'fade-in-link' : 'fade-out-link'}`}>\n              Donations\n            </NavLink>   \n                </div>\n                <div className=\"slits\">\n                <span className={`slit-1 ${isMenuOpen ? 'fade-in-link' : 'fade-out-link'}`}> </span>\n            <span className={`slit-2 ${isMenuOpen ? 'fade-in-link' : 'fade-out-link'}`}> </span>\n            <span className={`slit-3 ${isMenuOpen ? 'fade-in-link' : 'fade-out-link'}`}> </span>\n            <span className={`slit-4 ${isMenuOpen ? 'fade-in-link' : 'fade-out-link'}`}> </span>\n            <span className={`slit-5 ${isMenuOpen ? 'fade-in-link' : 'fade-out-link'}`}> </span>\n            <span className={`slit-6 ${isMenuOpen ? 'fade-in-link' : 'fade-out-link'}`}> </span>\n            <span className={`slit-7 ${isMenuOpen ? 'fade-in-link' : 'fade-out-link'}`}> </span>\n            <span className={`slit-8 ${isMenuOpen ? 'fade-in-link' : 'fade-out-link'}`}> </span>\n            <span className={`slit-9 ${isMenuOpen ? 'fade-in-link' : 'fade-out-link'}`}> </span>\n            <span className={`slit-10 ${isMenuOpen ? 'fade-in-link' : 'fade-out-link'}`}> </span>\n            <span className={`slit-11 ${isMenuOpen ? 'fade-in-link' : 'fade-out-link'}`}> </span>\n            <span className={`slit-12 ${isMenuOpen ? 'fade-in-link' : 'fade-out-link'}`}> </span>\n            <span className={`slit-13 ${isMenuOpen ? 'fade-in-link' : 'fade-out-link'}`}> </span>\n            <span className={`slit-14 ${isMenuOpen ? 'fade-in-link' : 'fade-out-link'}`}> </span>\n            <span className={`slit-15 ${isMenuOpen ? 'fade-in-link' : 'fade-out-link'}`}> </span>\n            </div> \n                </div>\n            </div>\n            </>\n    );\n}\nexport default Menu;","/root/investrties/src/pages/Signup.js",["94","95","96","97"],[],"import React from 'react';\nimport { useRef, useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Menu from '../components/menu';\nimport Navbar from '../components/navBar';\n\nimport axios from './api/axios';\nconst SIGNUP_URL = '/api/update-account';\n\nconst USER_REGEX = /^[a-zA-Z][a-zA-z0-9-_]{3,23}$/;\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[-!@#$%]).{8,24}$/;\nconst EMAIL_REGEX = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nconst Signup = () => {\n  const userRef = useRef();\n    const errRef = useRef();\n\n    const [user, setUser] = useState('');\n    const [validName, setValidName] = useState(false);\n    const [userFocus, setUserFocus] = useState(false);\n\n    const [email, setEmail] = useState('');\n    const [validEmail, setValidEmail] = useState(false);\n    const [emailFocus, setEmailFocus] = useState(false);\n\n    const [pwd, setPwd] = useState('');\n    const [validPwd, setValidPwd] = useState(false);\n    const [pwdFocus, setPwdFocus] = useState(false);\n\n    const [matchPwd, setMatchPwd] = useState('');\n    const [validMatch, setValidMatch] = useState(false);\n    const [matchFocus, setMatchFocus] = useState(false);\n\n    const [errMsg, setErrMsg] = useState('');\n    const [success, setSuccess] = useState(false);\n\n    useEffect(() => {\n        userRef.current.focus();\n    }, [])\n\n    useEffect(() => {\n        setValidName(USER_REGEX.test(user));\n    }, [user])\n\n    useEffect(() => {\n      setValidEmail(EMAIL_REGEX.test(email));\n  }, [email])\n\n    useEffect(() => {\n        setValidPwd(PWD_REGEX.test(pwd));\n        setValidMatch(pwd === matchPwd);\n    }, [pwd, matchPwd])\n\n    useEffect(() => {\n        setErrMsg('');\n    }, [user, pwd, matchPwd])\n\n    const accountInfo = {\n      username: user,\n      password: pwd,\n      email: email\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        // if button enabled with JS hack\n        const v1 = USER_REGEX.test(user);\n        const v2 = PWD_REGEX.test(pwd);\n        const v3 = EMAIL_REGEX.test(email);\n        if (!v1 || !v2 || !v3) {\n            setErrMsg(\"Invalid Entry\");\n            return;\n        }\n        try {\n            const response = await axios.post(SIGNUP_URL,\n                JSON.stringify(accountInfo),\n                {\n                    headers: { 'Content-Type': 'application/json' },\n                    withCredentials: true\n                }\n            );\n            // TODO: remove console.logs before deployment\n            console.log(JSON.stringify(response?.data));\n            //console.log(JSON.stringify(response))\n            setSuccess(true);\n            //clear state and controlled inputs\n            setUser('');\n            setEmail('');\n            setPwd('');\n            setMatchPwd('');\n            document.location.replace('/login');\n        } catch (err) {\n            if (!err?.response) {\n                setErrMsg('No Server Response');\n            } else if (err.response?.status === 400) {\n                setErrMsg('Username or Email Taken');\n            } else {\n                setErrMsg('Registration Failed')\n            }\n            errRef.current.focus();\n        }\n    }\n\n\n  return (\n    <><Navbar /><Menu /><section id=\"section_4\" className=\"offwhite\">\n      <section className=\"signup_section\"><p ref={errRef} className={errMsg ? \"errmsg\" :\n        \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\n        <h1 className=\"signup\">Sign Up</h1>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"username\">\n            Username:\n            <span className={validName ? \"valid\" : \"hide\"}>\n              Valid\n            </span>\n            <span className={validName || !user ? \"hide\" :\n              \"invalid\"}>\n              Invalid\n            </span>\n          </label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            ref={userRef}\n            autocomplete=\"off\"\n            onChange={(e) => setUser(e.target.value)}\n            required\n            aria-invalid={validName ? \"false\" : \"true\"}\n            aria-describedby=\"uidnote\"\n            onFocus={() => setUserFocus(true)}\n            onBlur={() => setUserFocus(false)} />\n          <p id=\"uidnote\" className={userFocus && user &&\n            !validName ? \"instructions\" : \"offscreen\"}>\n            4 to 24 characters.<br />\n            Must begin with a letter.<br />\n            Letters, numbers, underscores, hyphens allowed.\n          </p>\n          <label htmlFor=\"email\">\n            Email:\n            <span className={validEmail ? \"valid\" : \"hide\"}>\n              Valid\n            </span>\n            <span className={validEmail || !email ? \"hide\" :\n              \"invalid\"}>\n              Invalid\n            </span>\n          </label>\n          <input\n            type=\"text\"\n            id=\"email\"\n            ref={userRef}\n            autocomplete=\"off\"\n            onChange={(e) => setEmail(e.target.value)}\n            required\n            aria-invalid={validEmail ? \"false\" : \"true\"}\n            aria-describedby=\"emailnote\"\n            onFocus={() => setEmailFocus(true)}\n            onBlur={() => setEmailFocus(false)} />\n\n\n          <label htmlFor=\"password\">\n            Password:\n            <span className={validPwd ? \"valid\" : \"hide\"}>\n              Valid\n            </span>\n            <span className={validPwd || !pwd ? \"hide\" : \"invalid\"}>\n              Invalid\n            </span>\n          </label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            onChange={(e) => setPwd(e.target.value)}\n            required\n            aria-invalid={validPwd ? \"false\" : \"true\"}\n            aria-describedby=\"pwdnote\"\n            onFocus={() => setPwdFocus(true)}\n            onBlur={() => setPwdFocus(false)} />\n          <p id=\"pwdnote\" className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}>\n            Must include uppercase and lowercase letters,<br /> a number, and a special\n            character.<br /> These include,<span aria-label=\"dash\">-</span><span aria-label=\"exclamation mark\">!</span>\n            <span aria-label=\"at-symbol\">@</span><span aria-label=\"hashtag\">#</span>\n            <span aria-label=\"dollar sign\">$</span><span aria-label=\"percentage\">%</span>\n          </p>\n\n          <label htmlFor=\"confirm_pwd\">\n            Confirm Password:\n            <span className={validMatch && matchPwd ? \"valid\" : \"hide\"}>\n              Valid\n            </span>\n            <span className={validMatch || !matchPwd ? \"hide\" : \"invalid\"}>\n              Invalid\n            </span>\n          </label>\n          <input\n            type=\"password\"\n            id=\"confirm_pwd\"\n            onChange={(e) => setMatchPwd(e.target.value)}\n            required\n            aria-invalid={validMatch ? \"false\" : \"true\"}\n            aria-describedby=\"confirmnote\"\n            onFocus={() => setMatchFocus(true)}\n            onBlur={() => setMatchFocus(false)} />\n          <p id=\"confirmnote\" className={matchFocus && !validMatch ? \"instructions\" :\n            \"offscreen\"}>\n            Must match the first password input field.\n          </p>\n          <button disabled={!validName || !validPwd || !validMatch ? true : false} className=\"submit\">Sign Up</button>\n        </form>\n        <p className=\"registered\">\n          Already registered?<br />\n          <span className=\"line\">\n            {/*put router link here*/}\n            <NavLink to='/login' className=\"login\">Log In</NavLink>\n          </span>\n        </p>\n      </section>\n    </section></>\n  )\n}\n\nexport default Signup","/root/investrties/src/pages/Home.js",[],[],"/root/investrties/src/pages/Donations.js",[],[],"/root/investrties/src/pages/Features.js",[],[],"/root/investrties/src/pages/Login.js",[],[],"/root/investrties/src/pages/Feedback.js",[],[],"/root/investrties/src/pages/Ourplan.js",[],[],"/root/investrties/src/pages/Contactus.js",[],[],"/root/investrties/src/pages/api/axios.js",[],[],"/root/investrties/src/pages/context/AuthProvider.js",[],[],"/root/investrties/src/pages/Account.js",["98","99","100","101","102","103"],[],"import React from \"react\";\nimport { useRef, useState, useEffect, useContext } from 'react';\nimport AuthContext from \"./context/AuthProvider\";\nimport { NavLink } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\n\nimport axios from './api/axios';\nconst USERNAME_URL = '/api/account/username';\nconst NAME_URL = '/api/account/name';\n\nconst cookies = new Cookies();\n\nconst Account = () => {\n    const [username, setUsername] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [about, setAbout] = useState('');\n    const [profilePicture, setProfilePicture] = useState(null);\n\n\n    useEffect(() => {\n\n        const accessToken = cookies.get('accessToken');\n        console.log(accessToken); // This will output the token value\n\n    axios.get(USERNAME_URL, {\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${accessToken}`\n        }\n    })\n    .then(response => {\n        const username = response.data;\n        setUsername(username);\n    })\n    .catch(error => {\n        // Handle errors\n    });\n}, []);\nconst name = {\n    FirstName: firstName,\n    LastName: lastName,\n    About: about, \n    profilePicture: profilePicture ? profilePicture.name : null \n};\n\n\nconst nameSubmit = async (e) => {\n    e.preventDefault();\n    if (profilePicture) {\n        const allowedTypes = ['image/jpeg', 'image/png', 'image/gif'];\n        if (!allowedTypes.includes(profilePicture.type)) {\n            alert('Only JPEG, PNG, and GIF images are allowed.');\n            return;\n        }\n        if (profilePicture.size > 2 * 1024 * 1024) { // 2 MB limit\n            alert('Image size should be less than 2MB.');\n            return;\n        }\n\n        // Proceed to submit and handle the profile picture\n        // Remember to handle the server-side validation and saving here\n        // For demonstration purposes, I'm just logging the file details\n        console.log('Profile Picture:', profilePicture.name, profilePicture.type, profilePicture.size);\n    }\n    console.log(name);\n};\n    return(\n        <><h1>Hello! {username}</h1>\n        <p>Finsih Setting Up Your Profile!</p>\n        <form onSubmit={nameSubmit}>\n            <label htmlFor=\"firstName\">\n                First Name:\n                </label>\n                <input\n                    onChange={(e) => setFirstName(e.target.value)}\n                ></input>\n                <label htmlFor=\"lastName\">\n                Last Name:\n                </label>\n                <input\n                    onChange={(e) => setLastName(e.target.value)}\n                ></input>\n                <label htmlFor=\"about\">\n                Tell The World All About Yourself!\n                </label>\n                <input\n                    onChange={(e) => setAbout(e.target.value)}\n                ></input>\n            <label htmlFor=\"profilePicture\">Profile Picture:</label>\n                <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={(e) => setProfilePicture(e.target.files[0])}\n                />\n                 {profilePicture && (\n                    <img\n                        src={URL.createObjectURL(profilePicture)}\n                        alt=\"Profile Picture\"\n                        style={{ verticalAlign: 'center', width: '200px', height: '200px', borderRadius: '50%' }}\n                    />\n                )}\n                <button className=\"submit\">Submit</button>\n            </form>\n        </>\n    );\n}\n\nexport default Account",{"ruleId":"104","severity":1,"message":"105","line":9,"column":17,"nodeType":"106","endLine":9,"endColumn":52},{"ruleId":"107","severity":1,"message":"108","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":12},{"ruleId":"111","severity":1,"message":"112","line":12,"column":28,"nodeType":"113","messageId":"114","endLine":12,"endColumn":29,"suggestions":"115"},{"ruleId":"111","severity":1,"message":"112","line":12,"column":44,"nodeType":"113","messageId":"114","endLine":12,"endColumn":45,"suggestions":"116"},{"ruleId":"107","severity":1,"message":"117","line":24,"column":12,"nodeType":"109","messageId":"110","endLine":24,"endColumn":22},{"ruleId":"107","severity":1,"message":"118","line":35,"column":12,"nodeType":"109","messageId":"110","endLine":35,"endColumn":19},{"ruleId":"107","severity":1,"message":"119","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":16},{"ruleId":"107","severity":1,"message":"120","line":2,"column":39,"nodeType":"109","messageId":"110","endLine":2,"endColumn":49},{"ruleId":"107","severity":1,"message":"121","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":19},{"ruleId":"107","severity":1,"message":"122","line":4,"column":10,"nodeType":"109","messageId":"110","endLine":4,"endColumn":17},{"ruleId":"107","severity":1,"message":"123","line":9,"column":7,"nodeType":"109","messageId":"110","endLine":9,"endColumn":15},{"ruleId":"124","severity":1,"message":"125","line":97,"column":21,"nodeType":"106","endLine":101,"endColumn":23},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["126","127"],["128","129"],"'emailFocus' is assigned a value but never used.","'success' is assigned a value but never used.","'useRef' is defined but never used.","'useContext' is defined but never used.","'AuthContext' is defined but never used.","'NavLink' is defined but never used.","'NAME_URL' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",{"messageId":"130","fix":"131","desc":"132"},{"messageId":"133","fix":"134","desc":"135"},{"messageId":"130","fix":"136","desc":"132"},{"messageId":"133","fix":"137","desc":"135"},"removeEscape",{"range":"138","text":"139"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"140","text":"141"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"142","text":"139"},{"range":"143","text":"141"},[440,441],"",[440,440],"\\",[456,457],[456,456]]